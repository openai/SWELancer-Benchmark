---
- hosts: localhost
  become: true
  tasks: 
    - name: Ensure ISSUE_ID environment variable is set
      assert:
        that:
          - lookup('env', 'ISSUE_ID') is not none
        fail_msg: "The environment variable ISSUE_ID is not set."

    - name: Get the commit ID for the issue
      shell: |
        ISSUE_ID={{ lookup('env', 'ISSUE_ID') }}
        cat /app/tests/issues/$ISSUE_ID/commit_id.txt
      register: commit_id
    
    - name: Read the patch file content
     slurp:
       src: "/app/tests/issues/{{ lookup('env', 'ISSUE_ID') }}/bug_reintroduce.diff"
     register: patch_content
    
    - name: Apply the patch file if not empty
      shell: |
        ISSUE_ID={{ lookup('env', 'ISSUE_ID') }}
        patch -p1 < /app/tests/issues/$ISSUE_ID/bug_reintroduce.diff
      args:
        chdir: /app/expensify
      when: 
        - (patch_content.content | b64decode | trim) | length > 0
    
    - name: Install npm dependencies
      shell: |
        source /root/.nvm/nvm.sh
        npm install
      args:
        chdir: /app/expensify
        executable: /bin/bash

    - name: Check if the webpack.dev.ts file exists
      ansible.builtin.stat:
        path: /app/expensify/config/webpack/webpack.dev.ts
      register: webpack_file_ts

    - name: Compile Development Webpack (TypeScript)
      shell: |
        source /root/.nvm/nvm.sh
        npx webpack --config ./config/webpack/webpack.dev.ts
      args:
        chdir: /app/expensify
        executable: /bin/bash
      when: webpack_file_ts.stat.exists
      
    - name: Check if the webpack.dev.js file exists
      ansible.builtin.stat:
        path: /app/expensify/config/webpack/webpack.dev.js
      register: webpack_file_js
      
    - name: Compile Development Webpack (JavaScript)
      shell: |
        source /root/.nvm/nvm.sh
        npx webpack --config ./config/webpack/webpack.dev.js
      args:
        chdir: /app/expensify
        executable: /bin/bash
      when: webpack_file_js.stat.exists
