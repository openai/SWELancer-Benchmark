diff --git a/package-lock.json b/package-lock.json
index e08766b5e49..3ffebaa8614 100644
--- a/package-lock.json
+++ b/package-lock.json
@@ -1,12 +1,12 @@
 {
   "name": "new.expensify",
-  "version": "9.0.48-0",
+  "version": "9.0.41-1",
   "lockfileVersion": 3,
   "requires": true,
   "packages": {
     "": {
       "name": "new.expensify",
-      "version": "9.0.48-0",
+      "version": "9.0.41-1",
       "hasInstallScript": true,
       "license": "MIT",
       "dependencies": {
diff --git a/package.json b/package.json
index b944cd94149..74d164140f1 100644
--- a/package.json
+++ b/package.json
@@ -1,6 +1,6 @@
 {
   "name": "new.expensify",
-  "version": "9.0.48-0",
+  "version": "9.0.41-1",
   "author": "Expensify, Inc.",
   "homepage": "https://new.expensify.com",
   "description": "New Expensify is the next generation of Expensify: a reimagination of payments based atop a foundation of chat.",
diff --git a/src/libs/StringUtils.ts b/src/libs/StringUtils.ts
index d13c38700e1..f50fb0b605a 100644
--- a/src/libs/StringUtils.ts
+++ b/src/libs/StringUtils.ts
@@ -35,7 +35,12 @@ function removeInvisibleCharacters(value: string): string {
     // Remove spaces:
     // - \u200B: zero-width space
     // - \u2060: word joiner
+    
+    result = result.replace(new RegExp(String.fromCharCode(10), 'g'), '__NEWLINE__');
+
     result = result.replace(/[\u200B\u2060]/g, '');
+    result = result.replace(new RegExp(String.fromCharCode(160), 'g'), '');
+
 
     // The control unicode (Cc) regex removes all newlines,
     // so we first split the string by newline and rejoin it afterward to retain the original line breaks.
@@ -48,6 +53,9 @@ function removeInvisibleCharacters(value: string): string {
         )
         .join('\n');
 
+    result = result.replace(/__NEWLINE__/g, String.fromCharCode(10));
+
+
     // Remove characters from the (Cf) category that are not used for emojis
     result = result.replace(/[\u200E-\u200F]/g, '');
 
