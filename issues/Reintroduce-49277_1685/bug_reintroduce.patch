diff --git a/src/libs/CategoryUtils.ts b/src/libs/CategoryUtils.ts
index 479ae557eab..d98e6e6b005 100644
--- a/src/libs/CategoryUtils.ts
+++ b/src/libs/CategoryUtils.ts
@@ -3,6 +3,7 @@ import CONST from '@src/CONST';
 import type {Policy, TaxRate, TaxRatesWithDefault} from '@src/types/onyx';
 import type {ApprovalRule, ExpenseRule} from '@src/types/onyx/Policy';
 import * as CurrencyUtils from './CurrencyUtils';
+import * as PersonalDetailsUtils from './PersonalDetailsUtils';
 
 function formatDefaultTaxRateText(translate: LocaleContextProps['translate'], taxID: string, taxRate: TaxRate, policyTaxRates?: TaxRatesWithDefault) {
     const taxRateText = `${taxRate.name} ${CONST.DOT_SEPARATOR} ${taxRate.value}`;
@@ -50,6 +51,16 @@ function getCategoryApproverRule(approvalRules: ApprovalRule[], categoryName: st
     return approverRule;
 }
 
+function getCategoryApproverRuleDefault(approvalRules: ApprovalRule[], categoryName: string, showEmail: boolean = true) {
+    const categoryApprover = getCategoryApproverRule(approvalRules, categoryName)?.approver ?? '';
+    if (showEmail){
+        return categoryApprover;
+    } else {
+        const personalDetails = PersonalDetailsUtils.getPersonalDetailByEmail(categoryApprover);
+        return PersonalDetailsUtils.getDisplayNameOrDefault(personalDetails) ?? '';
+    }
+}
+
 function getCategoryExpenseRule(expenseRules: ExpenseRule[], categoryName: string) {
     const expenseRule = expenseRules?.find((rule) =>
         rule.applyWhen.find(({condition, field, value}) => condition === CONST.POLICY.RULE_CONDITIONS.MATCHES && field === CONST.POLICY.FIELDS.CATEGORY && value === categoryName),
@@ -68,4 +79,4 @@ function getCategoryDefaultTaxRate(expenseRules: ExpenseRule[], categoryName: st
     return categoryDefaultTaxRate;
 }
 
-export {formatDefaultTaxRateText, formatRequireReceiptsOverText, getCategoryApproverRule, getCategoryExpenseRule, getCategoryDefaultTaxRate};
+export {formatDefaultTaxRateText, formatRequireReceiptsOverText, getCategoryApproverRule, getCategoryApproverRuleDefault, getCategoryExpenseRule, getCategoryDefaultTaxRate};
diff --git a/src/pages/workspace/categories/CategorySettingsPage.tsx b/src/pages/workspace/categories/CategorySettingsPage.tsx
index e03412d8eaf..b930e1d71dc 100644
--- a/src/pages/workspace/categories/CategorySettingsPage.tsx
+++ b/src/pages/workspace/categories/CategorySettingsPage.tsx
@@ -20,7 +20,6 @@ import * as CategoryUtils from '@libs/CategoryUtils';
 import * as CurrencyUtils from '@libs/CurrencyUtils';
 import * as ErrorUtils from '@libs/ErrorUtils';
 import Navigation from '@libs/Navigation/Navigation';
-import * as PersonalDetailsUtils from '@libs/PersonalDetailsUtils';
 import {isControlPolicy} from '@libs/PolicyUtils';
 import * as PolicyUtils from '@libs/PolicyUtils';
 import type {SettingsNavigatorParamList} from '@navigation/types';
@@ -78,9 +77,7 @@ function CategorySettingsPage({
     }, [policyCategory?.maxExpenseAmount, policyCategoryExpenseLimitType, policyCurrency, translate]);
 
     const approverText = useMemo(() => {
-        const categoryApprover = CategoryUtils.getCategoryApproverRule(policy?.rules?.approvalRules ?? [], categoryName)?.approver ?? '';
-        const approver = PersonalDetailsUtils.getPersonalDetailByEmail(categoryApprover);
-        return approver?.displayName ?? categoryApprover;
+        return CategoryUtils.getCategoryApproverRuleDefault(policy?.rules?.approvalRules ?? [], categoryName)
     }, [categoryName, policy?.rules?.approvalRules]);
 
     const defaultTaxRateText = useMemo(() => {
