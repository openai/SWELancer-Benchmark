
diff --git a/src/components/Search/index.tsx b/src/components/Search/index.tsx
index b415d91b7ab..1b1baa4920e 100644
--- a/src/components/Search/index.tsx
+++ b/src/components/Search/index.tsx
@@ -17,7 +17,7 @@ import useNetwork from '@hooks/useNetwork';
 import usePrevious from '@hooks/usePrevious';
 import useResponsiveLayout from '@hooks/useResponsiveLayout';
 import useThemeStyles from '@hooks/useThemeStyles';
-import {turnOffMobileSelectionMode, turnOnMobileSelectionMode} from '@libs/actions/MobileSelectionMode';
+import toggleMobileSelectionMode, {turnOffMobileSelectionMode, turnOnMobileSelectionMode} from '@libs/actions/MobileSelectionMode';
 import * as SearchActions from '@libs/actions/Search';
 import * as DeviceCapabilities from '@libs/DeviceCapabilities';
 import Log from '@libs/Log';
@@ -108,12 +108,12 @@ function Search({queryJSON}: SearchProps) {
         const selectedKeys = Object.keys(selectedTransactions).filter((key) => selectedTransactions[key]);
         if (!isSmallScreenWidth) {
             if (selectedKeys.length === 0) {
-                turnOffMobileSelectionMode();
+                toggleMobileSelectionMode(false);
             }
             return;
         }
         if (selectedKeys.length > 0 && !selectionMode?.isEnabled) {
-            turnOnMobileSelectionMode();
+            toggleMobileSelectionMode(true);
         }
     }, [isSmallScreenWidth, selectedTransactions, selectionMode?.isEnabled]);
 
@@ -188,6 +188,7 @@ function Search({queryJSON}: SearchProps) {
     const isDataLoaded = searchResults?.data !== undefined && searchResults?.search?.type === type && searchResults?.search?.status === status;
     const shouldShowLoadingState = !isOffline && !isDataLoaded;
     const shouldShowLoadingMoreItems = !shouldShowLoadingState && searchResults?.search?.isLoading && searchResults?.search?.offset > 0;
+
     const isSearchResultsEmpty = !searchResults?.data || SearchUtils.isSearchResultsEmpty(searchResults);
     const prevIsSearchResultEmpty = usePrevious(isSearchResultsEmpty);
 
@@ -195,7 +196,7 @@ function Search({queryJSON}: SearchProps) {
         if (!isSearchResultsEmpty || prevIsSearchResultEmpty) {
             return;
         }
-        turnOffMobileSelectionMode();
+        toggleMobileSelectionMode(true);
     }, [isSearchResultsEmpty, prevIsSearchResultEmpty]);
 
     if (shouldShowLoadingState) {
diff --git a/src/components/SelectionListWithModal/index.tsx b/src/components/SelectionListWithModal/index.tsx
index 2d218bc815f..7de41a15d0a 100644
--- a/src/components/SelectionListWithModal/index.tsx
+++ b/src/components/SelectionListWithModal/index.tsx
@@ -8,7 +8,7 @@ import type {BaseSelectionListProps, ListItem, SelectionListHandle} from '@compo
 import useLocalize from '@hooks/useLocalize';
 import useMobileSelectionMode from '@hooks/useMobileSelectionMode';
 import useResponsiveLayout from '@hooks/useResponsiveLayout';
-import {turnOffMobileSelectionMode, turnOnMobileSelectionMode} from '@libs/actions/MobileSelectionMode';
+import toggleMobileSelectionMode, {turnOffMobileSelectionMode, turnOnMobileSelectionMode} from '@libs/actions/MobileSelectionMode';
 import CONST from '@src/CONST';
 
 type SelectionListWithModalProps<TItem extends ListItem> = BaseSelectionListProps<TItem> & {
@@ -33,12 +33,12 @@ function SelectionListWithModal<TItem extends ListItem>(
         const selectedItems = sections[0].data.filter((item) => item.isSelected);
         if (!isSmallScreenWidth) {
             if (selectedItems.length === 0) {
-                turnOffMobileSelectionMode();
+                toggleMobileSelectionMode(false);
             }
             return;
         }
         if (selectedItems.length > 0 && !selectionMode?.isEnabled) {
-            turnOnMobileSelectionMode();
+            toggleMobileSelectionMode(true);
         }
     }, [sections, selectionMode, isSmallScreenWidth]);
 
@@ -56,7 +56,7 @@ function SelectionListWithModal<TItem extends ListItem>(
     };
 
     const turnOnSelectionMode = () => {
-        turnOnMobileSelectionMode();
+        toggleMobileSelectionMode(true);
         setIsModalVisible(false);
 
         if (onTurnOnSelectionMode) {
diff --git a/src/hooks/useAutoTurnSelectionModeOffWhenHasNoActiveOption/index.ts b/src/hooks/useAutoTurnSelectionModeOffWhenHasNoActiveOption/index.ts
index cdc18868fac..a96eb33b6af 100644
--- a/src/hooks/useAutoTurnSelectionModeOffWhenHasNoActiveOption/index.ts
+++ b/src/hooks/useAutoTurnSelectionModeOffWhenHasNoActiveOption/index.ts
@@ -1,7 +1,7 @@
 import {useEffect} from 'react';
 import type {ListItem} from '@components/SelectionList/types';
 import usePrevious from '@hooks/usePrevious';
-import {turnOffMobileSelectionMode} from '@libs/actions/MobileSelectionMode';
+import toggleMobileSelectionMode, {turnOffMobileSelectionMode} from '@libs/actions/MobileSelectionMode';
 
 const useAutoTurnSelectionModeOffWhenHasNoActiveOption = (listItem: ListItem[]) => {
     const hasActiveOption = listItem.some((item) => !item.isDisabled);
@@ -11,7 +11,7 @@ const useAutoTurnSelectionModeOffWhenHasNoActiveOption = (listItem: ListItem[])
         if (hasActiveOption || !prevHasActiveOption) {
             return;
         }
-        turnOffMobileSelectionMode();
+        toggleMobileSelectionMode(false);
     }, [hasActiveOption, prevHasActiveOption]);
 };
 
diff --git a/src/hooks/useMobileSelectionMode.ts b/src/hooks/useMobileSelectionMode.ts
index 0f2fcb9558f..3073edeaf07 100644
--- a/src/hooks/useMobileSelectionMode.ts
+++ b/src/hooks/useMobileSelectionMode.ts
@@ -1,6 +1,6 @@
 import {useEffect} from 'react';
 import {useOnyx} from 'react-native-onyx';
-import {turnOffMobileSelectionMode} from '@libs/actions/MobileSelectionMode';
+import toggleMobileSelectionMode, {turnOffMobileSelectionMode} from '@libs/actions/MobileSelectionMode';
 import ONYXKEYS from '@src/ONYXKEYS';
 
 export default function useMobileSelectionMode(shouldAutoTurnOff = true) {
@@ -10,7 +10,7 @@ export default function useMobileSelectionMode(shouldAutoTurnOff = true) {
         if (!shouldAutoTurnOff) {
             return;
         }
-        turnOffMobileSelectionMode();
+        toggleMobileSelectionMode(false);
     }, [shouldAutoTurnOff]);
 
     return {selectionMode};
diff --git a/src/libs/actions/MobileSelectionMode.ts b/src/libs/actions/MobileSelectionMode.ts
index 65a51b83490..4ae120eac23 100644
--- a/src/libs/actions/MobileSelectionMode.ts
+++ b/src/libs/actions/MobileSelectionMode.ts
@@ -1,12 +1,8 @@
 import Onyx from 'react-native-onyx';
 import ONYXKEYS from '@src/ONYXKEYS';
 
-const turnOnMobileSelectionMode = () => {
-    Onyx.merge(ONYXKEYS.MOBILE_SELECTION_MODE, {isEnabled: true});
+const toggleMobileSelectionMode = (status: boolean) => {
+    Onyx.merge(ONYXKEYS.MOBILE_SELECTION_MODE, {isEnabled: status});
 };
 
-const turnOffMobileSelectionMode = () => {
-    Onyx.merge(ONYXKEYS.MOBILE_SELECTION_MODE, {isEnabled: false});
-};
-
-export {turnOnMobileSelectionMode, turnOffMobileSelectionMode};
+export default toggleMobileSelectionMode;
diff --git a/src/pages/ReportParticipantsPage.tsx b/src/pages/ReportParticipantsPage.tsx
index 8835d7c8d5c..d39947bb1ac 100755
--- a/src/pages/ReportParticipantsPage.tsx
+++ b/src/pages/ReportParticipantsPage.tsx
@@ -25,7 +25,7 @@ import useNetwork from '@hooks/useNetwork';
 import useResponsiveLayout from '@hooks/useResponsiveLayout';
 import useStyleUtils from '@hooks/useStyleUtils';
 import useThemeStyles from '@hooks/useThemeStyles';
-import {turnOffMobileSelectionMode} from '@libs/actions/MobileSelectionMode';
+import toggleMobileSelectionMode, {turnOffMobileSelectionMode} from '@libs/actions/MobileSelectionMode';
 import * as Report from '@libs/actions/Report';
 import * as UserSearchPhraseActions from '@libs/actions/RoomMembersUserSearchPhrase';
 import Navigation from '@libs/Navigation/Navigation';
@@ -376,7 +376,7 @@ function ReportParticipantsPage({report, route}: ReportParticipantsPageProps) {
                     onBackButtonPress={() => {
                         if (selectionMode?.isEnabled) {
                             setSelectedMembers([]);
-                            turnOffMobileSelectionMode();
+                            toggleMobileSelectionMode(false);
                             return;
                         }
 
diff --git a/src/pages/RoomMembersPage.tsx b/src/pages/RoomMembersPage.tsx
index f8c07e5b0a6..8833fcfc7f8 100644
--- a/src/pages/RoomMembersPage.tsx
+++ b/src/pages/RoomMembersPage.tsx
@@ -25,7 +25,7 @@ import useLocalize from '@hooks/useLocalize';
 import useNetwork from '@hooks/useNetwork';
 import useResponsiveLayout from '@hooks/useResponsiveLayout';
 import useThemeStyles from '@hooks/useThemeStyles';
-import {turnOffMobileSelectionMode} from '@libs/actions/MobileSelectionMode';
+import toggleMobileSelectionMode, {turnOffMobileSelectionMode} from '@libs/actions/MobileSelectionMode';
 import * as UserSearchPhraseActions from '@libs/actions/RoomMembersUserSearchPhrase';
 import * as DeviceCapabilities from '@libs/DeviceCapabilities';
 import localeCompare from '@libs/LocaleCompare';
@@ -357,7 +357,7 @@ function RoomMembersPage({report, session, policies}: RoomMembersPageProps) {
                     onBackButtonPress={() => {
                         if (selectionMode?.isEnabled) {
                             setSelectedMembers([]);
-                            turnOffMobileSelectionMode();
+                            toggleMobileSelectionMode(false);
                             return;
                         }
 
diff --git a/src/pages/Search/SearchPageBottomTab.tsx b/src/pages/Search/SearchPageBottomTab.tsx
index 684d45df5a3..b95f566447d 100644
--- a/src/pages/Search/SearchPageBottomTab.tsx
+++ b/src/pages/Search/SearchPageBottomTab.tsx
@@ -9,7 +9,7 @@ import useActiveCentralPaneRoute from '@hooks/useActiveCentralPaneRoute';
 import useLocalize from '@hooks/useLocalize';
 import useResponsiveLayout from '@hooks/useResponsiveLayout';
 import useThemeStyles from '@hooks/useThemeStyles';
-import {turnOffMobileSelectionMode} from '@libs/actions/MobileSelectionMode';
+import toggleMobileSelectionMode, {turnOffMobileSelectionMode} from '@libs/actions/MobileSelectionMode';
 import Navigation from '@libs/Navigation/Navigation';
 import type {AuthScreensParamList} from '@libs/Navigation/types';
 import * as SearchUtils from '@libs/SearchUtils';
@@ -66,7 +66,7 @@ function SearchPageBottomTab() {
                         title={translate('common.selectMultiple')}
                         onBackButtonPress={() => {
                             clearSelectedTransactions();
-                            turnOffMobileSelectionMode();
+                            toggleMobileSelectionMode(false);
                         }}
                     />
                 )}
diff --git a/src/pages/workspace/WorkspaceMembersPage.tsx b/src/pages/workspace/WorkspaceMembersPage.tsx
index 52b8a06ba93..4e51d9735a2 100644
--- a/src/pages/workspace/WorkspaceMembersPage.tsx
+++ b/src/pages/workspace/WorkspaceMembersPage.tsx
@@ -30,7 +30,7 @@ import useResponsiveLayout from '@hooks/useResponsiveLayout';
 import useStyleUtils from '@hooks/useStyleUtils';
 import useThemeStyles from '@hooks/useThemeStyles';
 import useWindowDimensions from '@hooks/useWindowDimensions';
-import {turnOffMobileSelectionMode} from '@libs/actions/MobileSelectionMode';
+import toggleMobileSelectionMode, {turnOffMobileSelectionMode} from '@libs/actions/MobileSelectionMode';
 import * as DeviceCapabilities from '@libs/DeviceCapabilities';
 import Log from '@libs/Log';
 import Navigation from '@libs/Navigation/Navigation';
@@ -617,7 +617,7 @@ function WorkspaceMembersPage({personalDetails, route, policy, currentUserPerson
             onBackButtonPress={() => {
                 if (selectionMode?.isEnabled) {
                     setSelectedEmployees([]);
-                    turnOffMobileSelectionMode();
+                    toggleMobileSelectionMode(false);
                     return;
                 }
                 Navigation.goBack();
diff --git a/src/pages/workspace/categories/WorkspaceCategoriesPage.tsx b/src/pages/workspace/categories/WorkspaceCategoriesPage.tsx
index fa0b57ba207..dd7c23c4d54 100644
--- a/src/pages/workspace/categories/WorkspaceCategoriesPage.tsx
+++ b/src/pages/workspace/categories/WorkspaceCategoriesPage.tsx
@@ -32,7 +32,7 @@ import useResponsiveLayout from '@hooks/useResponsiveLayout';
 import useTheme from '@hooks/useTheme';
 import useThemeStyles from '@hooks/useThemeStyles';
 import useWindowDimensions from '@hooks/useWindowDimensions';
-import {turnOffMobileSelectionMode} from '@libs/actions/MobileSelectionMode';
+import toggleMobileSelectionMode, {turnOffMobileSelectionMode} from '@libs/actions/MobileSelectionMode';
 import * as DeviceCapabilities from '@libs/DeviceCapabilities';
 import localeCompare from '@libs/LocaleCompare';
 import Navigation from '@libs/Navigation/Navigation';
@@ -359,7 +359,7 @@ function WorkspaceCategoriesPage({route}: WorkspaceCategoriesPageProps) {
                     onBackButtonPress={() => {
                         if (selectionMode?.isEnabled) {
                             setSelectedCategories({});
-                            turnOffMobileSelectionMode();
+                            toggleMobileSelectionMode(false);
                             return;
                         }
                         Navigation.goBack(backTo);
diff --git a/src/pages/workspace/distanceRates/PolicyDistanceRatesPage.tsx b/src/pages/workspace/distanceRates/PolicyDistanceRatesPage.tsx
index 6ce697e00fd..e38144ac054 100644
--- a/src/pages/workspace/distanceRates/PolicyDistanceRatesPage.tsx
+++ b/src/pages/workspace/distanceRates/PolicyDistanceRatesPage.tsx
@@ -21,7 +21,7 @@ import usePolicy from '@hooks/usePolicy';
 import useResponsiveLayout from '@hooks/useResponsiveLayout';
 import useTheme from '@hooks/useTheme';
 import useThemeStyles from '@hooks/useThemeStyles';
-import {turnOffMobileSelectionMode} from '@libs/actions/MobileSelectionMode';
+import toggleMobileSelectionMode, {turnOffMobileSelectionMode} from '@libs/actions/MobileSelectionMode';
 import * as CurrencyUtils from '@libs/CurrencyUtils';
 import * as DeviceCapabilities from '@libs/DeviceCapabilities';
 import Navigation from '@libs/Navigation/Navigation';
@@ -298,7 +298,7 @@ function PolicyDistanceRatesPage({
                     onBackButtonPress={() => {
                         if (selectionMode?.isEnabled) {
                             setSelectedDistanceRates([]);
-                            turnOffMobileSelectionMode();
+                            toggleMobileSelectionMode(false);
                             return;
                         }
                         Navigation.goBack();
diff --git a/src/pages/workspace/reportFields/ReportFieldsListValuesPage.tsx b/src/pages/workspace/reportFields/ReportFieldsListValuesPage.tsx
index 6cc1da84a06..36d27446eeb 100644
--- a/src/pages/workspace/reportFields/ReportFieldsListValuesPage.tsx
+++ b/src/pages/workspace/reportFields/ReportFieldsListValuesPage.tsx
@@ -21,7 +21,7 @@ import useLocalize from '@hooks/useLocalize';
 import useMobileSelectionMode from '@hooks/useMobileSelectionMode';
 import useResponsiveLayout from '@hooks/useResponsiveLayout';
 import useThemeStyles from '@hooks/useThemeStyles';
-import {turnOffMobileSelectionMode} from '@libs/actions/MobileSelectionMode';
+import toggleMobileSelectionMode, {turnOffMobileSelectionMode} from '@libs/actions/MobileSelectionMode';
 import * as ReportField from '@libs/actions/Policy/ReportField';
 import * as DeviceCapabilities from '@libs/DeviceCapabilities';
 import localeCompare from '@libs/LocaleCompare';
@@ -297,7 +297,7 @@ function ReportFieldsListValuesPage({
                     onBackButtonPress={() => {
                         if (selectionMode?.isEnabled) {
                             setSelectedValues({});
-                            turnOffMobileSelectionMode();
+                            toggleMobileSelectionMode(false);
                             return;
                         }
                         Navigation.goBack();
diff --git a/src/pages/workspace/reportFields/WorkspaceReportFieldsPage.tsx b/src/pages/workspace/reportFields/WorkspaceReportFieldsPage.tsx
index 01465a9b8a3..f995bb1bb7e 100644
--- a/src/pages/workspace/reportFields/WorkspaceReportFieldsPage.tsx
+++ b/src/pages/workspace/reportFields/WorkspaceReportFieldsPage.tsx
@@ -29,7 +29,7 @@ import usePolicy from '@hooks/usePolicy';
 import useResponsiveLayout from '@hooks/useResponsiveLayout';
 import useTheme from '@hooks/useTheme';
 import useThemeStyles from '@hooks/useThemeStyles';
-import {turnOffMobileSelectionMode} from '@libs/actions/MobileSelectionMode';
+import toggleMobileSelectionMode, {turnOffMobileSelectionMode} from '@libs/actions/MobileSelectionMode';
 import * as DeviceCapabilities from '@libs/DeviceCapabilities';
 import localeCompare from '@libs/LocaleCompare';
 import Navigation from '@libs/Navigation/Navigation';
@@ -258,7 +258,7 @@ function WorkspaceReportFieldsPage({
                     onBackButtonPress={() => {
                         if (selectionModeHeader) {
                             setSelectedReportFields([]);
-                            turnOffMobileSelectionMode();
+                            toggleMobileSelectionMode(false);
                             return;
                         }
                         Navigation.goBack();
diff --git a/src/pages/workspace/tags/WorkspaceTagsPage.tsx b/src/pages/workspace/tags/WorkspaceTagsPage.tsx
index ffdfdead759..fe5b42ea8ce 100644
--- a/src/pages/workspace/tags/WorkspaceTagsPage.tsx
+++ b/src/pages/workspace/tags/WorkspaceTagsPage.tsx
@@ -31,7 +31,7 @@ import useResponsiveLayout from '@hooks/useResponsiveLayout';
 import useTheme from '@hooks/useTheme';
 import useThemeStyles from '@hooks/useThemeStyles';
 import useWindowDimensions from '@hooks/useWindowDimensions';
-import {turnOffMobileSelectionMode} from '@libs/actions/MobileSelectionMode';
+import toggleMobileSelectionMode, {turnOffMobileSelectionMode} from '@libs/actions/MobileSelectionMode';
 import * as DeviceCapabilities from '@libs/DeviceCapabilities';
 import localeCompare from '@libs/LocaleCompare';
 import Navigation from '@libs/Navigation/Navigation';
@@ -371,7 +371,7 @@ function WorkspaceTagsPage({route}: WorkspaceTagsPageProps) {
                     onBackButtonPress={() => {
                         if (selectionMode?.isEnabled) {
                             setSelectedTags({});
-                            turnOffMobileSelectionMode();
+                            toggleMobileSelectionMode(false);
                             return;
                         }
                         Navigation.goBack();
diff --git a/src/pages/workspace/tags/WorkspaceViewTagsPage.tsx b/src/pages/workspace/tags/WorkspaceViewTagsPage.tsx
index 61013242c9e..2802dcfba91 100644
--- a/src/pages/workspace/tags/WorkspaceViewTagsPage.tsx
+++ b/src/pages/workspace/tags/WorkspaceViewTagsPage.tsx
@@ -23,7 +23,7 @@ import useResponsiveLayout from '@hooks/useResponsiveLayout';
 import useStyleUtils from '@hooks/useStyleUtils';
 import useTheme from '@hooks/useTheme';
 import useThemeStyles from '@hooks/useThemeStyles';
-import {turnOffMobileSelectionMode} from '@libs/actions/MobileSelectionMode';
+import toggleMobileSelectionMode, {turnOffMobileSelectionMode} from '@libs/actions/MobileSelectionMode';
 import * as DeviceCapabilities from '@libs/DeviceCapabilities';
 import localeCompare from '@libs/LocaleCompare';
 import Navigation from '@libs/Navigation/Navigation';
@@ -74,7 +74,7 @@ function WorkspaceViewTagsPage({route}: WorkspaceViewTagsProps) {
 
         return () => {
             setSelectedTags({});
-            turnOffMobileSelectionMode();
+            toggleMobileSelectionMode(false);
         };
     }, [isFocused]);
 
@@ -258,7 +258,7 @@ function WorkspaceViewTagsPage({route}: WorkspaceViewTagsProps) {
                     onBackButtonPress={() => {
                         if (selectionMode?.isEnabled) {
                             setSelectedTags({});
-                            turnOffMobileSelectionMode();
+                            toggleMobileSelectionMode(false);
                             return;
                         }
                         Navigation.goBack();
diff --git a/src/pages/workspace/taxes/WorkspaceTaxesPage.tsx b/src/pages/workspace/taxes/WorkspaceTaxesPage.tsx
index 31e4a5e093e..444866543f7 100644
--- a/src/pages/workspace/taxes/WorkspaceTaxesPage.tsx
+++ b/src/pages/workspace/taxes/WorkspaceTaxesPage.tsx
@@ -23,7 +23,7 @@ import useNetwork from '@hooks/useNetwork';
 import useResponsiveLayout from '@hooks/useResponsiveLayout';
 import useTheme from '@hooks/useTheme';
 import useThemeStyles from '@hooks/useThemeStyles';
-import {turnOffMobileSelectionMode} from '@libs/actions/MobileSelectionMode';
+import toggleMobileSelectionMode, {turnOffMobileSelectionMode} from '@libs/actions/MobileSelectionMode';
 import {clearTaxRateError, deletePolicyTaxes, setPolicyTaxesEnabled} from '@libs/actions/TaxRate';
 import * as DeviceCapabilities from '@libs/DeviceCapabilities';
 import * as ErrorUtils from '@libs/ErrorUtils';
@@ -289,7 +289,7 @@ function WorkspaceTaxesPage({
                     onBackButtonPress={() => {
                         if (selectionMode?.isEnabled) {
                             setSelectedTaxesIDs([]);
-                            turnOffMobileSelectionMode();
+                            toggleMobileSelectionMode(false);
                             return;
                         }
                         Navigation.goBack();
