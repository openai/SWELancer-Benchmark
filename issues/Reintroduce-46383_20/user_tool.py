import sys, os\n\nbase_path = os.path.abspath(os.path.join(os.path.dirname(__file__), '..'))\nsys.path.insert(0, base_path)\n\nfrom playwright.sync_api import sync_playwright, expect\nfrom playwright.sync_api._context_manager import PlaywrightContextManager\nfrom playwright._impl._browser import Browser\nfrom playwright._impl._page import Page\n\nfrom utils.trace_cleaner import trace_cleaner\n\nstatic_email = "testuserexpensify1+113@gmail.com"\n\ndef login_user(p: PlaywrightContextManager, first_name="Milan", last_name="T") -> tuple[Browser, Page, str]:\n    # Launch Chromium and open a new page\n    browser = p.chromium.launch(channel="chrome", headless=True, args=["--disable-web-security", "--disable-features=IsolateOrigins,site-per-process"], slow_mo=1000)\n    context = browser.new_context(\n            viewport={"width": 360, "height": 640},  # Phone screen dimensions\n            user_agent="Mozilla/5.0 (Linux; Android 10; Mobile) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/85.0.4183.121 Mobile Safari/537.36",  # Mobile user agent\n            is_mobile=True,\n            has_touch=True,\n            ignore_https_errors=True\n        )\n    page = context.new_page()\n    user_email = static_email\n\n    # Step 1: Open expensify url\n    page.goto('https://dev.new.expensify.com:8082/') \n\n    # Step 2: Enter email and click continue\n    page.locator('input[type="email"]').fill(user_email)\n    page.locator('button[tabindex="0"]').click()\n\n    # Step 3: Click join button\n    try:\n        page.get_by_role("button", name="Join").click()\n    except Exception:\n        pass\n\n    # Step 4: Select 'Track and budget expenses' in onbarding page and click Continue\n    page.locator("text='Track and budget expenses'").click()\n    page.get_by_role("button", name="Continue").click()\n\n    # Step 5: Enter first name, last name and click continue\n    page.locator('input[name="fname"]').fill(first_name)\n    page.locator('input[name="lname"]').fill(last_name)\n    page.get_by_role("button", name="Continue").last.click()\n\n    return browser, page, context, user_email\n\ndef test_create_workspace():\n    with sync_playwright() as p:\n        browser, page, context, user_email = login_user(p)\n        # Start tracing\n        context.tracing.start(screenshots=True, snapshots=True, sources=True)\n        try:\n            # Step 2: Create a new workspace\n            page.get_by_label("Close").click()\n            page.get_by_label("Workspaces").click()\n            page.get_by_label("New workspace").click()\n\n            # Step 3: Navigate back and verify redirection to the workspace switcher page\n            back_button = page.get_by_test_id("WorkspaceInitialPage").get_by_label("Back")\n            back_button.click()\n\n            # Define the expected URL for workspace switcher page\n            expected_url = "https://dev.new.expensify.com:8082/workspace-switcher"\n\n            # Wait until the URL matches the expected URL\n            page.wait_for_url(expected_url)\n\n            # Validate that the current URL matches the expected URL\n            assert page.url == expected_url, f"Error: Expected URL '{expected_url}', but found '{page.url}'"\n        except Exception as e:\n            raise e\n        finally:\n            # Stop tracing and export the file\n            context.tracing.stop()\n            trace_path = "/app/expensify/user_tool/output_browser1.zip"\n            context.tracing.export_to_file(trace_path)\n            trace_cleaner(trace_path)\n            context.close()\n            browser.close()\n