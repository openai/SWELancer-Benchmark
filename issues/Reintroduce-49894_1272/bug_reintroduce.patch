diff --git a/src/libs/StringUtils.ts b/src/libs/StringUtils.ts
index d13c38700e1..15cec6e1447 100644
--- a/src/libs/StringUtils.ts
+++ b/src/libs/StringUtils.ts
@@ -29,24 +29,46 @@ function isEmptyString(value: string): boolean {
 /**
  *  Remove invisible characters from a string except for spaces and format characters for emoji, and trim it.
  */
+
+function removeSpecificCharacters(input: string, chars: Array<string>, replacer: string = '') {
+    // Define the characters to remove
+    const unwantedChars = new Set(chars);
+    
+    // Filter out unwanted characters
+    let result = '';
+    for (const char of input) {
+        if (!unwantedChars.has(char)) {
+            result += char;
+        }
+        else{
+            result = result + replacer
+        }
+    }
+    
+    return result;
+}
+
 function removeInvisibleCharacters(value: string): string {
     let result = value;
 
     // Remove spaces:
     // - \u200B: zero-width space
     // - \u2060: word joiner
-    result = result.replace(/[\u200B\u2060]/g, '');
+    result = removeSpecificCharacters(result, ['\u200B','\u00A0', '\u2060']);
+    result = removeSpecificCharacters(result, ['/\n/g'], '')
 
     // The control unicode (Cc) regex removes all newlines,
     // so we first split the string by newline and rejoin it afterward to retain the original line breaks.
     result = result
-        .split('\n')
-        .map((part) =>
+        .split('/n')
+        .reduce((acc, part) =>{
             // Remove all characters from the 'Other' (C) category except for format characters (Cf)
             // because some of them are used for emojis
-            part.replace(/[\p{Cc}\p{Cs}\p{Co}\p{Cn}]/gu, ''),
-        )
-        .join('\n');
+            const cleanedPart = part.replace(/[\p{Cc}\p{Cs}\p{Co}\p{Cn}]/gu, '');
+            // Accumulate the cleaned parts with the original line breaks
+            return acc + (acc ? '\n' : '') + cleanedPart;
+        }, '');
+    result = removeSpecificCharacters(result, ['/\u00A0/g'], '\n');
 
     // Remove characters from the (Cf) category that are not used for emojis
     result = result.replace(/[\u200E-\u200F]/g, '');
