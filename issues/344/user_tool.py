import sys, os\n\nbase_path = os.path.abspath(os.path.join(os.path.dirname(__file__), '..'))\nsys.path.insert(0, base_path)\n\nfrom playwright.sync_api import sync_playwright, expect\nfrom utils.trace_cleaner import trace_cleaner\n\n# Function to check focus and fetch border-color\ndef check_focus(page):\n    page.get_by_test_id("username").fill("aquasaddam+28553@gmail.com")  # we need to use an already present account\n    page.get_by_role("button", name="Continue").click()\n\n    page.get_by_test_id("validateCode").press("ArrowRight")\n    page.get_by_test_id("validateCode").press("ArrowRight")\n    page.get_by_test_id("validateCode").press("ArrowRight")\n\n    page.wait_for_timeout(5000)  # wait for 30 seconds, "Didn't receive a magic code?" appears after 30 seconds\n\n    page.get_by_label("Didn't receive a magic code?").click()\n\n    page.wait_for_timeout(2000)\n\n    # Use Playwright's `locator` to locate the element with the complex selector\n    element = page.locator('#root > div > div > div > div > div:nth-child(1) > div > div.css-view-175oi2r.r-flex-13awgt0 > div > div > div.css-view-175oi2r.r-flex-13awgt0 > div > div.css-view-175oi2r.r-bottom-1p0dtai.r-left-1d2f490.r-position-u8s1d.r-right-zchlnj.r-top-ipm5af.r-pointerEvents-12vffkv > div.css-view-175oi2r.r-flex-13awgt0.r-pointerEvents-12vffkv > div > div > div > div.css-view-175oi2r.r-flex-13awgt0 > div > div > div > div > div > div:nth-child(2) > div > div:nth-child(1) > div > div > div > div:nth-child(2) > form > div:nth-child(4) > div:nth-child(1) > div:nth-child(1) > div:nth-child(2) > div')\n\n    # Check that the element's border-color is the expected RGB value\n    expect(element).to_have_css('border-color', 'rgb(3, 212, 124)')\n    page.wait_for_timeout(1000)\n\n\n# Test execution function for pytest\ndef test_run():\n    with sync_playwright() as playwright:\n        browser = playwright.chromium.launch(\n            headless=True, \n            proxy={\n                    'server': 'http://127.0.0.1:8080',\n                    },\n            args=[\n                '--disable-web-security',\n                '--disable-features=IsolateOrigins,site-per-process',\n                ],\n        )\n        context = browser.new_context()\n        context.tracing.start(screenshots=True, snapshots=True)\n        page = context.new_page()\n        try:\n            # open expensify\n            page.goto('https://dev.new.expensify.com:8082/')\n            check_focus(page)\n        except Exception as e:\n            raise e\n        finally:\n            context.tracing.stop(path="/app/expensify/user_tool/output_browser1.zip")\n            trace_cleaner("/app/expensify/user_tool/output_browser1.zip")\n\n        # Close context and browser\n        context.close()\n        browser.close()\n