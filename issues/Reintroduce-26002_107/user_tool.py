import sys, os\n\nbase_path = os.path.abspath(os.path.join(os.path.dirname(__file__), '..'))\nsys.path.insert(0, base_path)\n\n\nimport random\nimport re\nimport time\nfrom playwright.sync_api import sync_playwright\nfrom utils.trace_cleaner import trace_cleaner\n\nEMAIL = "ikhanle001+4@gmail.com"\nPASSWORD = "dzcr knad otxp bsuz"\n\n\ndef login_user(p):\n    # Launch chromiun and open new page\n    browser = p.chromium.launch(channel="chrome", headless=True, slow_mo=2100, args=[\n            "--ignore-certificate-errors",\n            "--disable-web-security",\n            "--disable-features=IsolateOrigins,site-per-process"\n        ])\n    page = browser.new_page()\n    user_email = EMAIL\n\n    # Step 1: Open expensify url\n    page.goto('https://dev.new.expensify.com:8082/')\n\n    page.locator('input[type="email"]').fill(user_email)\n    \n    page.get_by_role("button", name="Continue").nth(0).click()\n    \n    page.locator('input[data-testid="validateCode"]').fill("123456")\n\n    return browser, page\n\ndef test():\n    with sync_playwright() as p:\n        browser, page = login_user(p)\n        context = page.context\n        # Start tracing\n        context.tracing.start(screenshots=True, snapshots=True)\n\n        try:\n            # Click settings\n            click_settings_button = page.locator("[aria-label='My settings']")\n            click_settings_button.click()\n\n            # Click workspaces\n            click_workspace_button = page.locator("div[aria-label='Workspaces']")\n            click_workspace_button.click()\n\n            # Create new workspaces\n            create_new_workspace_button = page.locator("[aria-label='New workspace']").nth(0)\n            create_new_workspace_button.click()\n\n            workspace_name_div = page.locator('//div[contains(text(), "Name")]/following-sibling::div[1]/div')\n            workspace_name = workspace_name_div.text_content()\n\n            # Click Back button\n            click_back_button = page.locator("[aria-label='Back']").last\n            click_back_button.click()\n\n            # Click Inbox\n            click_Inbox = page.locator("button[aria-label='Inbox']").last\n            click_Inbox.click()\n\n            # Click WS chat\n            target_inbox_item = page.locator('//button[@aria-label="Navigates to a chat" or @aria-label="Navega a un chat"]', has_text=workspace_name)\n            target_inbox_item.click()\n\n            # Edit input text\n            edit_input_text = page.locator('div[contenteditable="true"]').last\n\n            # Focus on the div by clicking it\n            edit_input_text.fill("hiiii I am here")\n\n            # send the message\n            send_message = page.locator("[aria-label='Send']")\n            send_message.click()\n\n            # hover the sent message\n            hover_message = page.locator('div[aria-label="Chat message"]', has_text="hiiii I am here").last\n            hover_message.hover()\n\n            # click reply in thread\n            click_reply_in_thread = page.locator('button[aria-label="Reply in thread"]').last\n            click_reply_in_thread.click()\n\n            # Click reply in thread\n            logos_reply_chat = page.locator('button[aria-label="hiiii I am here"]').last\n\n            # Get the first child div inside the button\n            button_content = logos_reply_chat.locator("div").nth(0)\n\n            # Locate only the direct child divs (first-level children)\n            # Use `:scope` to limit to direct children\n            outer_divs = button_content.locator(":scope > div").all()\n\n            # Assert that there are exactly two outer divs\n            assert len(outer_divs) == 2, f"Expected 2 outer divs, but found {len(outer_divs)}"\n\n            # Hover over the first two outer divs\n            for i, child in enumerate(outer_divs[:2]):\n                child.hover()\n\n        except Exception as e:\n            print("Test failed:", e)\n            raise\n        finally:\n            # Stop trace and clean it\n            context.tracing.stop(path="/app/expensify/user_tool/output_browser1.zip")\n            trace_cleaner("/app/expensify/user_tool/output_browser1.zip")\n            browser.close()\n