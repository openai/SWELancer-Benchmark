import sys, os\n\nbase_path = os.path.abspath(os.path.join(os.path.dirname(__file__), '..'))\nsys.path.insert(0, base_path)\n\nimport time\nfrom playwright.sync_api import Page, expect, sync_playwright\nfrom utils.trace_cleaner import trace_cleaner\n\n# Utility to generate a random email\ndef generate_random_email(timestamp: int = int(time.time())):\n    return f"testerbro7077+989357@gmail.com"\n\ndef create_user(\n    page: Page, firstname: str, lastname: str = None, timestamp: int = None\n):\n    timestamp = timestamp or int(time.time())\n    # Sign up\n    page.get_by_test_id("username").fill(generate_random_email(timestamp))\n    page.wait_for_timeout(1000)\n    page.get_by_role("button", name="Continue").click()\n    page.wait_for_timeout(1000)\n    page.get_by_role("button", name="Join").click()\n\n    # Update profile\n    page.get_by_text("Track and budget expenses").click()\n    page.get_by_role("textbox", name="First name").fill(firstname)\n    page.get_by_role("textbox", name="Last name").fill(lastname or f"{timestamp}")\n    page.wait_for_timeout(1000)\n    page.get_by_role("button", name="Continue").click()\n\ndef close_button_if_present(page: Page):\n    """\n    Occasionally, there is a close button that prevents any clicks on the page as\n    it covers most of the screen. This button cannot be seen visually.\n    """\n    close_button = page.locator('button[aria-label="Close"]')\n    if close_button.is_visible():\n        close_button.click()\n\ndef test_horizontal_avatar_stack():\n    with sync_playwright() as p:\n        browser = p.chromium.launch(channel="chrome", headless=True, slow_mo=500, args=[\n            "--disable-web-security",\n            "--disable-features=IsolateOrigins,site-per-process"\n        ])\n        context = browser.new_context()\n        page = context.new_page()\n\n        # Start tracing\n        context.tracing.start(snapshots=True, screenshots=True)\n\n        try:\n            timestamp = int(time.time())\n            page.goto("https://dev.new.expensify.com:8082/")\n\n            # create user\n            create_user(page, "TestUser", "me")\n            page.wait_for_timeout(1000)\n\n            # Start Group Chat\n            close_button_if_present(page)\n            page.get_by_label("Start chat (Floating action)").click()\n            page.get_by_label("Start chat", exact=True).click()\n\n            email_suffixes = [1, 2, 3]\n\n            for suffix in email_suffixes:\n                page.get_by_test_id("selection-list-text-input").fill(\n                    f"testuser7077+989357{suffix}@gmail.com"\n                )\n                page.get_by_role("button", name="Add to group").click()\n\n            page.get_by_role("button", name="Next").nth(0).click()\n            page.get_by_role("button", name="Start group").click()\n\n            page.get_by_label("Create").last.click()\n            page.get_by_label("Split expense").click()\n            page.get_by_label("Manual").click()\n            page.get_by_placeholder("0").fill("125")\n            page.get_by_role("button", name="Next").nth(0).click()\n            page.get_by_role("button", name="Split ").click()\n\n            # The avatars should be stacked horizontally\n            expect(\n                page.locator(\n                    'div[style="align-items: center; flex-direction: row; height: 32px;"]'\n                )\n            ).to_be_visible()\n            page.wait_for_timeout(1000)\n\n        finally:\n            # Stop tracing, export trace, clean it, then close\n            context.tracing.stop()\n            trace_path = "/app/expensify/user_tool/output_browser1.zip"\n            context.tracing.export(trace_path)\n            trace_cleaner(trace_path)\n            context.close()\n            browser.close()\n