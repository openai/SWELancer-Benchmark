import sys, os\n\nbase_path = os.path.abspath(os.path.join(os.path.dirname(__file__), '..'))\nsys.path.insert(0, base_path)\n\nimport time\nfrom playwright.sync_api import sync_playwright, expect\nfrom playwright.sync_api._context_manager import PlaywrightContextManager\n# from playwright._impl._browser import Browser  # (No longer needed directly)\n# from playwright._impl._page import Page       # (No longer needed directly)\n\n\n# Utility to generate a random email\ndef generate_random_email():\n    timestamp = int(time.time())\n    return f"aliceoglualice+{1734466074}@gmail.com"\n\n\ndef login_user(page, first_name="John", last_name="Doe"):\n    # Use the passed in page to perform all login steps\n    user_email = generate_random_email()\n\n    # Step 1: Open expensify url\n    page.goto('https://dev.new.expensify.com:8082/')\n\n    # Step 2: Enter email and click continue\n    page.locator('input[type="email"]').fill(user_email)\n    page.locator('button[tabindex="0"]').click()\n    page.wait_for_timeout(1000)\n\n    # Step 3: Click join button\n    try:\n        page.locator('button[tabindex="0"]').click()\n        page.wait_for_timeout(1000)\n    except Exception:\n        pass\n    expect(page.locator("text=What do you want to do today?")).to_be_visible()\n\n    # Step 4: Select 'Track and budget expenses' in onboarding page and click Continue\n    page.locator("text='Track and budget expenses'").click()\n    page.get_by_role("button", name="Continue").click()\n    page.wait_for_timeout(1000)\n\n    # Step 5: Enter first name, last name and click continue\n    page.locator('input[name="fname"]').fill(first_name)\n    page.locator('input[name="lname"]').fill(last_name)\n    page.get_by_role("button", name="Continue").last.click()\n    page.wait_for_timeout(1000)\n\n    return first_name, last_name\n\ndef test():\n    from utils.trace_cleaner import trace_cleaner\n    with sync_playwright() as p:\n        browser = None\n        context = None\n        try:\n            # Launch Chromium and create a tracing-enabled context\n            browser = p.chromium.launch(headless=True, args=[\n                "--ignore-certificate-errors",\n                "--disable-web-security",\n                "--disable-features=IsolateOrigins,site-per-process"\n            ], slow_mo=500)\n            context = browser.new_context()\n            context.tracing.start(screenshots=True, snapshots=True, sources=True)\n\n            # Create a page and log in\n            page = context.new_page()\n            first_name, last_name = login_user(page)\n            page.wait_for_timeout(1000)\n\n            # Click settings\n            click_settings_button = page.locator("[aria-label='My settings']")\n            click_settings_button.click()\n            page.wait_for_timeout(1000)\n\n            # Click workspaces\n            click_workspace_button = page.locator("div[aria-label='Workspaces']")\n            click_workspace_button.click()\n            page.wait_for_timeout(1000)\n\n            # Create new workspaces\n            create_new_workspace_button = page.locator("[aria-label='New workspace']").nth(0)\n            create_new_workspace_button.click()\n            page.wait_for_timeout(1000)\n\n            # Click Default Currency\n            currency_divs = page.locator('div[aria-label*="-"]')\n            currency_divs.click()\n            page.wait_for_timeout(1000)\n\n            # Click AUD currency\n            click_aud_currency_button = page.locator("[aria-label='AUD - A$']")\n            click_aud_currency_button.click()\n            page.wait_for_timeout(1000)\n\n            # Click more features\n            click_more_features = page.locator("[aria-label='More features']")\n            click_more_features.click()\n            page.wait_for_timeout(1000)\n\n            # enable distance rates\n            enable_distance_rates = page.locator("button[aria-label='Add, update, and enforce rates.']")\n            enable_distance_rates.click()\n            page.wait_for_timeout(1000)\n\n            # Click distance rates\n            click_distance_rates = page.locator("div[aria-label='Distance rates']")\n            click_distance_rates.click()\n            page.wait_for_timeout(1000)\n\n            # select existing distance rate\n            select_existing_distance = page.locator("div", has_text="Enabled").nth(-1)\n            select_existing_distance.click()\n            page.wait_for_timeout(1000)\n\n            # click rate\n            click_rate = page.locator("div", has_text="Rate").nth(-1)\n            click_rate.click()\n            page.wait_for_timeout(1000)\n\n            # input text as 1\n            page.locator('input[type="text"]').fill("1")\n\n            # click save\n            click_save = page.locator("div", has_text="Save").nth(-1)\n            click_save.click()\n            page.wait_for_timeout(1000)\n\n            # Click Back button\n            click_back_button = page.locator("[aria-label='Back']").nth(-1)\n            click_back_button.click()\n            page.wait_for_timeout(1000)\n\n            # Click Back button\n            click_back_button = page.locator("[aria-label='Back']").nth(-1)\n            click_back_button.click()\n            page.wait_for_timeout(1000)\n\n            # repeating the same flow of creating a workspace\n            # Create new workspaces\n            create_new_workspace_button = page.locator("[aria-label='New workspace']").nth(0)\n            create_new_workspace_button.click()\n            page.wait_for_timeout(1000)\n\n            # Click Default Currency\n            currency_divs = page.locator('div[aria-label*="-"]')\n            currency_divs.click()\n            page.wait_for_timeout(1000)\n\n            # Click AUD currency\n            click_aud_currency_button = page.locator("[aria-label='AUD - A$']")\n            click_aud_currency_button.click()\n            page.wait_for_timeout(1000)\n\n            # Click more features\n            click_more_features = page.locator("[aria-label='More features']")\n            click_more_features.click()\n            page.wait_for_timeout(1000)\n\n            # enable distance rates\n            enable_distance_rates = page.locator("button[aria-label='Add, update, and enforce rates.']")\n            enable_distance_rates.click()\n            page.wait_for_timeout(1000)\n\n            # Click distance rates\n            click_distance_rates = page.locator("div[aria-label='Distance rates']")\n            click_distance_rates.click()\n            page.wait_for_timeout(1000)\n\n            # select existing distance rate\n            select_existing_distance = page.locator("div", has_text="Enabled").nth(-1)\n            select_existing_distance.click()\n            page.wait_for_timeout(1000)\n\n            # click rate\n            click_rate = page.locator("div", has_text="Rate").nth(-1)\n            click_rate.click()\n            page.wait_for_timeout(1000)\n\n            # input text as 1\n            page.locator('input[type="text"]').fill("2")\n\n            # click save\n            click_save = page.locator("div", has_text="Save").nth(-1)\n            click_save.click()\n            page.wait_for_timeout(1000)\n\n            # Click Back button\n            click_back_button = page.locator("[aria-label='Back']").nth(-1)\n            click_back_button.click()\n            page.wait_for_timeout(1000)\n\n            # Click Back button\n            click_back_button = page.locator("[aria-label='Back']").nth(-1)\n            click_back_button.click()\n            page.wait_for_timeout(1000)\n\n            # Click Inbox button\n            click_start_chat = page.locator('[aria-label="Start chat (Floating action)"]')\n            click_start_chat.click()\n            page.wait_for_timeout(1000)\n\n            # Click submit expense\n            click_submit_expense_button = page.locator("[aria-label='Submit expense']")\n            click_submit_expense_button.click()\n            page.wait_for_timeout(1000)\n\n            # Click Distance\n            click_distance = page.locator('[aria-label="Distance"]')\n            click_distance.click()\n            page.wait_for_timeout(1000)\n\n            # Click start\n            click_start = page.locator('div[data-rbd-draggable-id="start_waypointwaypoint0"]')\n            click_start.click()\n            page.wait_for_timeout(1000)\n\n            # fill the start address\n            page.locator('input[rows="1"]').fill("est")\n            page.wait_for_timeout(3000)\n\n            # select the address from the dropdown\n            select_first_address = page.locator('div[id="result-list-id"]').locator('div', has_text="Estes Park").nth(0)\n            select_first_address.click()\n            page.wait_for_timeout(1000)\n\n            # Click stop\n            click_stop = page.locator('div[data-rbd-draggable-id="stop_waypointwaypoint1"]')\n            click_stop.click()\n            page.wait_for_timeout(1000)\n\n            # fill the stop address\n            page.locator('input[rows="1"]').fill("aur")\n            page.wait_for_timeout(3000)\n\n            # select the address from the dropdown\n            select_first_address = page.locator('div[id="result-list-id"]').locator('div', has_text="Aurora").nth(0)\n            select_first_address.click()\n            page.wait_for_timeout(5000)\n\n            # click Next\n            click_next = page.locator("div", has_text="Next").nth(-1)\n            click_next.click()\n            page.wait_for_timeout(2000)\n\n            # Select first workspace\n            click_first_workspace = page.locator(f'button[aria-label="{first_name.capitalize()} {last_name}\\'s Workspace"]')\n            click_first_workspace.click()\n            page.wait_for_timeout(2000)\n\n            # Locate the div that contains the A$ symbol\n            first_currency_text = page.locator('div', has_text="A$").nth(-1).text_content()\n            page.wait_for_timeout(1000)\n\n            # Click Back button\n            click_back_button = page.locator("[aria-label='Back']").nth(-1)\n            click_back_button.click()\n            page.wait_for_timeout(1000)\n\n            # Select first workspace\n            click_second_workspace = page.locator(f'button[aria-label="{first_name.capitalize()} {last_name}\\'s Workspace 1"]')\n            click_second_workspace.click()\n            page.wait_for_timeout(1000)\n\n            # Locate the div that contains the A$ symbol\n            second_currency_text = page.locator('div', has_text="A$").nth(-1).text_content()\n            page.wait_for_timeout(1000)\n\n            # Assert that the two text values are not equal\n            assert first_currency_text.strip().lower() != second_currency_text.strip().lower(), "The two currency texts should not be equal."\n\n        except Exception as e:\n            print("Test error:", e)\n        finally:\n            if context:\n                context.tracing.stop()\n                context.tracing.export('/app/expensify/user_tool/output_browser1.zip')\n                trace_cleaner('/app/expensify/user_tool/output_browser1.zip')\n            if browser:\n                browser.close()\n