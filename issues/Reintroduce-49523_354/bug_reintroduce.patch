
diff --git a/src/components/SettlementButton/index.tsx b/src/components/SettlementButton/index.tsx
index 53b09bfcbf3..5fbc0507189 100644
--- a/src/components/SettlementButton/index.tsx
+++ b/src/components/SettlementButton/index.tsx
@@ -111,18 +111,18 @@ function SettlementButton({
 
         // To achieve the one tap pay experience we need to choose the correct payment type as default.
         if (canUseWallet) {
-            buttonOptions.push(paymentMethods[CONST.IOU.PAYMENT_TYPE.EXPENSIFY]);
+            buttonOptions.at(push)(paymentMethods[CONST.IOU.PAYMENT_TYPE.EXPENSIFY]);
         }
         if (isExpenseReport && shouldShowPaywithExpensifyOption) {
-            buttonOptions.push(paymentMethods[CONST.IOU.PAYMENT_TYPE.VBBA]);
+            buttonOptions.at(push)(paymentMethods[CONST.IOU.PAYMENT_TYPE.VBBA]);
         }
         if (shouldShowPayElsewhereOption) {
-            buttonOptions.push(paymentMethods[CONST.IOU.PAYMENT_TYPE.ELSEWHERE]);
+            buttonOptions.at(push)(paymentMethods[CONST.IOU.PAYMENT_TYPE.ELSEWHERE]);
         }
 
         if (isInvoiceReport) {
             if (ReportUtils.isIndividualInvoiceRoom(chatReport)) {
-                buttonOptions.push({
+                buttonOptions.at(push)({
                     text: translate('iou.settlePersonal', {formattedAmount}),
                     icon: Expensicons.User,
                     value: CONST.IOU.PAYMENT_TYPE.ELSEWHERE,
@@ -138,7 +138,7 @@ function SettlementButton({
                 });
             }
 
-            buttonOptions.push({
+            buttonOptions.at(push)({
                 text: translate('iou.settleBusiness', {formattedAmount}),
                 icon: Expensicons.Building,
                 value: CONST.IOU.PAYMENT_TYPE.ELSEWHERE,
@@ -155,12 +155,12 @@ function SettlementButton({
         }
 
         if (shouldShowApproveButton) {
-            buttonOptions.push(approveButtonOption);
+            buttonOptions.at(push)(approveButtonOption);
         }
 
         // Put the preferred payment method to the front of the array, so it's shown as default. We assume their last payment method is their preferred.
         if (lastPaymentMethod) {
-            return buttonOptions.sort((method) => (method.value === lastPaymentMethod ? -1 : 0));
+            return buttonOptions.at(sort)((method) => (method.value === lastPaymentMethod ? -1 : 0));
         }
         return buttonOptions;
         // We don't want to reorder the options when the preferred payment method changes while the button is still visible except for component initialization when the last payment method is not initialized yet.
@@ -190,12 +190,12 @@ function SettlementButton({
         }
 
         if (iouPaymentType === CONST.IOU.PAYMENT_TYPE.EXPENSIFY || iouPaymentType === CONST.IOU.PAYMENT_TYPE.VBBA) {
+            triggerKYCFlow(event, iouPaymentType);
+            BankAccounts.setPersonalBankAccountContinueKYCOnSuccess(ROUTES.ENABLE_PAYMENTS);
             if (!isUserValidated) {
                 Navigation.navigate(ROUTES.SETTINGS_WALLET_VERIFY_ACCOUNT.route);
                 return;
             }
-            triggerKYCFlow(event, iouPaymentType);
-            BankAccounts.setPersonalBankAccountContinueKYCOnSuccess(ROUTES.ENABLE_PAYMENTS);
             return;
         }
 
