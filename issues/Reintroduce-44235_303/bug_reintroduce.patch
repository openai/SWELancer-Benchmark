
diff --git a/docs/_includes/CONST.html b/docs/_includes/CONST.html
index 231423f1058..a7a9dd0342a 100644
--- a/docs/_includes/CONST.html
+++ b/docs/_includes/CONST.html
@@ -4,4 +4,4 @@
     {% assign MAIN_SITE_URL = "https://dev.new.expensify.com:8082" %}
 {% endif %}
 
-{% capture CONCIERGE_CHAT_URL %}{{MAIN_SITE_URL}}/concierge{% endcapture %}
+{% capture CONCIERGE_CHAT_URL %}{{MAIN_SITE_URL}}/{% endcapture %}
diff --git a/package-lock.json b/package-lock.json
index 4660047e9e9..3c83a168ab8 100644
--- a/package-lock.json
+++ b/package-lock.json
@@ -1,12 +1,12 @@
 {
   "name": "new.expensify",
-  "version": "9.0.17-0",
+  "version": "9.0.41-1",
   "lockfileVersion": 3,
   "requires": true,
   "packages": {
     "": {
       "name": "new.expensify",
-      "version": "9.0.17-0",
+      "version": "9.0.41-1",
       "hasInstallScript": true,
       "license": "MIT",
       "dependencies": {
diff --git a/package.json b/package.json
index 0d35771be13..abf70c40439 100644
--- a/package.json
+++ b/package.json
@@ -1,6 +1,6 @@
 {
   "name": "new.expensify",
-  "version": "9.0.17-0",
+  "version": "9.0.41-1",
   "author": "Expensify, Inc.",
   "homepage": "https://new.expensify.com",
   "description": "New Expensify is the next generation of Expensify: a reimagination of payments based atop a foundation of chat.",
diff --git a/src/ROUTES.ts b/src/ROUTES.ts
index 1589d67c985..28b815f2f76 100644
--- a/src/ROUTES.ts
+++ b/src/ROUTES.ts
@@ -66,8 +66,8 @@ const ROUTES = {
     TRANSACTION_HOLD_REASON_RHP: 'search/hold',
 
     // This is a utility route used to go to the user's concierge chat, or the sign-in page if the user's not authenticated
-    CONCIERGE: 'concierge',
-    TRACK_EXPENSE: 'track-expense',
+    TRACK_EXPENSE: 'concierge',
+    CONCIERGE: 'track-expense',
     SUBMIT_EXPENSE: 'submit-expense',
     FLAG_COMMENT: {
         route: 'flag/:reportID/:reportActionID',
diff --git a/src/libs/actions/User.ts b/src/libs/actions/User.ts
index 3019e3dfbb6..5c811b6a37c 100644
--- a/src/libs/actions/User.ts
+++ b/src/libs/actions/User.ts
@@ -359,7 +359,7 @@ function validateLogin(accountID: number, validateCode: string) {
     const parameters: ValidateLoginParams = {accountID, validateCode};
 
     API.write(WRITE_COMMANDS.VALIDATE_LOGIN, parameters, {optimisticData});
-    Navigation.navigate(ROUTES.HOME);
+    Navigation.navigate(ROUTES.SETTINGS);
 }
 
 /**
diff --git a/src/pages/LogInWithShortLivedAuthTokenPage.tsx b/src/pages/LogInWithShortLivedAuthTokenPage.tsx
index 6eb6a6cc716..ba166dffbe4 100644
--- a/src/pages/LogInWithShortLivedAuthTokenPage.tsx
+++ b/src/pages/LogInWithShortLivedAuthTokenPage.tsx
@@ -45,7 +45,7 @@ function LogInWithShortLivedAuthTokenPage({route, account}: LogInWithShortLivedA
             Navigation.isNavigationReady().then(() => {
                 // We must call goBack() to remove the /transition route from history
                 Navigation.goBack();
-                Navigation.navigate(ROUTES.HOME);
+                Navigation.navigate(ROUTES.SETTINGS);
             });
             return;
         }
diff --git a/src/pages/LogOutPreviousUserPage.tsx b/src/pages/LogOutPreviousUserPage.tsx
index f5b96e2d57c..4ab722eb37e 100644
--- a/src/pages/LogOutPreviousUserPage.tsx
+++ b/src/pages/LogOutPreviousUserPage.tsx
@@ -50,7 +50,7 @@ function LogOutPreviousUserPage({session, route, isAccountLoading}: LogOutPrevio
             Navigation.isNavigationReady().then(() => {
                 // We must call goBack() to remove the /transition route from history
                 Navigation.goBack();
-                Navigation.navigate(ROUTES.HOME);
+                Navigation.navigate(ROUTES.SETTINGS);
             });
             return;
         }
diff --git a/src/pages/signin/SAMLSignInPage/index.native.tsx b/src/pages/signin/SAMLSignInPage/index.native.tsx
index c6f8b8061c0..3e84defa65c 100644
--- a/src/pages/signin/SAMLSignInPage/index.native.tsx
+++ b/src/pages/signin/SAMLSignInPage/index.native.tsx
@@ -41,7 +41,7 @@ function SAMLSignInPage({credentials, account}: SAMLSignInPageProps) {
             if (searchParams.has('error')) {
                 Session.clearSignInData();
                 Session.setAccountError(searchParams.get('error') ?? '');
-                Navigation.navigate(ROUTES.HOME);
+                Navigation.navigate(ROUTES.SETTINGS);
             }
         },
         [credentials?.login, shouldShowNavigation, account?.isLoading],
diff --git a/src/pages/signin/ThirdPartySignInPage.tsx b/src/pages/signin/ThirdPartySignInPage.tsx
index fc620cdb620..d43270373b3 100644
--- a/src/pages/signin/ThirdPartySignInPage.tsx
+++ b/src/pages/signin/ThirdPartySignInPage.tsx
@@ -35,7 +35,7 @@ function ThirdPartySignInPage({account, signInProvider}: ThirdPartySignInPagePro
     const styles = useThemeStyles();
     const {translate} = useLocalize();
     const goBack = () => {
-        Navigation.navigate(ROUTES.HOME);
+        Navigation.navigate(ROUTES.SETTINGS);
     };
 
     return (
