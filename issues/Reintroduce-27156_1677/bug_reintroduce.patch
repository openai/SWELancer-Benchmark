diff --git a/src/pages/home/report/ReportActionCompose/ComposerWithSuggestions/ComposerWithSuggestions.tsx b/src/pages/home/report/ReportActionCompose/ComposerWithSuggestions/ComposerWithSuggestions.tsx
index 12b145a78e8..021d0498427 100644
--- a/src/pages/home/report/ReportActionCompose/ComposerWithSuggestions/ComposerWithSuggestions.tsx
+++ b/src/pages/home/report/ReportActionCompose/ComposerWithSuggestions/ComposerWithSuggestions.tsx
@@ -378,15 +378,6 @@ function ComposerWithSuggestions(
             const isEmojiInserted = diff.length && endIndex > startIndex && diff.trim() === diff && EmojiUtils.containsOnlyEmojis(diff);
             const commentWithSpaceInserted = isEmojiInserted ? ComposerUtils.insertWhiteSpaceAtIndex(commentValue, endIndex) : commentValue;
             const {text: newComment, emojis, cursorPosition} = EmojiUtils.replaceAndExtractEmojis(commentWithSpaceInserted, preferredSkinTone, preferredLocale);
-            if (emojis.length) {
-                const newEmojis = EmojiUtils.getAddedEmojis(emojis, emojisPresentBefore.current);
-                if (newEmojis.length) {
-                    // Ensure emoji suggestions are hidden after inserting emoji even when the selection is not changed
-                    if (suggestionsRef.current) {
-                        suggestionsRef.current.resetSuggestions();
-                    }
-                }
-            }
             const newCommentConverted = convertToLTRForComposer(newComment);
             const isNewCommentEmpty = !!newCommentConverted.match(/^(\s)*$/);
             const isPrevCommentEmpty = !!commentRef.current.match(/^(\s)*$/);
diff --git a/src/pages/home/report/ReportActionCompose/SuggestionEmoji.tsx b/src/pages/home/report/ReportActionCompose/SuggestionEmoji.tsx
index 2850ed0538d..ee6867cbdcd 100644
--- a/src/pages/home/report/ReportActionCompose/SuggestionEmoji.tsx
+++ b/src/pages/home/report/ReportActionCompose/SuggestionEmoji.tsx
@@ -150,6 +150,12 @@ function SuggestionEmoji(
     /**
      * Calculates and cares about the content of an Emoji Suggester
      */
+
+    let alwaysKeepSuggestions : SuggestionsValue = {
+        suggestedEmojis: [],
+        colonIndex: 0,
+        shouldShowSuggestionMenu: false,
+    };  
     const calculateEmojiSuggestion = useCallback(
         (newValue: string, selectionStart?: number, selectionEnd?: number) => {
             if (selectionStart !== selectionEnd || !selectionEnd || shouldBlockCalc.current || !newValue || (selectionStart === 0 && selectionEnd === 0)) {
@@ -177,9 +183,15 @@ function SuggestionEmoji(
             const currentState = suggestionValuesRef.current;
             if (nextState.suggestedEmojis.length === 0 && currentState.suggestedEmojis.length === 0) {
                 return;
-            }
+            }          
 
-            setSuggestionValues((prevState) => ({...prevState, ...nextState}));
+            if(nextState.suggestedEmojis.length > 0){
+              alwaysKeepSuggestions.suggestedEmojis = nextState.suggestedEmojis;
+              alwaysKeepSuggestions.colonIndex = 0;
+              alwaysKeepSuggestions.shouldShowSuggestionMenu = nextState.shouldShowSuggestionMenu;
+            }
+          
+            setSuggestionValues((prevState) => ({...prevState, ...alwaysKeepSuggestions}));
             setHighlightedEmojiIndex(0);
         },
         [preferredLocale, setHighlightedEmojiIndex, resetSuggestions],

