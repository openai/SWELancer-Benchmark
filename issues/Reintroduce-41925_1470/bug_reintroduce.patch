diff --git a/src/components/MenuItem.tsx b/src/components/MenuItem.tsx
index 8dbff428781..3f16c514bfe 100644
--- a/src/components/MenuItem.tsx
+++ b/src/components/MenuItem.tsx
@@ -452,7 +452,6 @@ function MenuItem(
             // eslint-disable-next-line no-nested-ternary
             shouldPutLeftPaddingWhenNoIcon || (icon && !Array.isArray(icon)) ? (avatarSize === CONST.AVATAR_SIZE.SMALL ? styles.ml2 : styles.ml3) : {},
             shouldShowBasicTitle ? {} : styles.textStrong,
-            numberOfLinesTitle !== 1 ? styles.preWrap : styles.pre,
             interactive && disabled ? {...styles.userSelectNone} : {},
             styles.ltr,
             isDeleted ? styles.offlineFeedback.deleted : {},
diff --git a/src/components/Text.tsx b/src/components/Text.tsx
index 16aaf9a708c..cdb8303031c 100644
--- a/src/components/Text.tsx
+++ b/src/components/Text.tsx
@@ -4,6 +4,7 @@ import React, {useContext} from 'react';
 import {Text as RNText, StyleSheet} from 'react-native';
 import type {TextProps as RNTextProps, TextStyle} from 'react-native';
 import useTheme from '@hooks/useTheme';
+import useThemeStyles from '@hooks/useThemeStyles';
 import type {FontUtilsType} from '@styles/utils/FontUtils';
 import FontUtils from '@styles/utils/FontUtils';
 import variables from '@styles/variables';
@@ -28,8 +29,12 @@ type TextProps = RNTextProps &
         family?: keyof FontUtilsType['fontFamily']['platform'];
     };
 
-function Text({color, fontSize = variables.fontSizeNormal, textAlign = 'left', children, family = 'EXP_NEUE', style = {}, ...props}: TextProps, ref: ForwardedRef<RNText>) {
+function Text(
+    {color, fontSize = variables.fontSizeNormal, textAlign = 'left', children, family = 'EXP_NEUE', style = {}, numberOfLines = 1, ...props}: TextProps,
+    ref: ForwardedRef<RNText>,
+) {
     const theme = useTheme();
+    const styles = useThemeStyles();
     const customStyle = useContext(CustomStylesForChildrenContext);
 
     const componentStyle: TextStyle = {
@@ -39,6 +44,7 @@ function Text({color, fontSize = variables.fontSizeNormal, textAlign = 'left', c
         ...FontUtils.fontFamily.platform[family],
         ...StyleSheet.flatten(style),
         ...StyleSheet.flatten(customStyle),
+        ...(numberOfLines !== 1 ? styles.preWrap : styles.pre),
     };
 
     if (!componentStyle.lineHeight && componentStyle.fontSize === variables.fontSizeNormal) {
@@ -50,6 +56,7 @@ function Text({color, fontSize = variables.fontSizeNormal, textAlign = 'left', c
             allowFontScaling={false}
             ref={ref}
             style={componentStyle}
+            numberOfLines={numberOfLines}
             // eslint-disable-next-line react/jsx-props-no-spreading
             {...props}
         >
