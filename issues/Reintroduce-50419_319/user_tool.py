import sys, os\n\nbase_path = os.path.abspath(os.path.join(os.path.dirname(__file__), '..'))\nsys.path.insert(0, base_path)\n\nfrom playwright.sync_api import sync_playwright, expect\nimport re\nfrom utils.trace_cleaner import trace_cleaner\n\nexpensify_email = "totherandomuser+50419@gmail.com"\n\ndef login(p, context):\n    page = context.new_page()\n    page.goto('https://dev.new.expensify.com:8082')\n\n    # Step 1: Enter username and continue\n    page.get_by_test_id("username").click()\n    page.get_by_test_id("username").fill(expensify_email)\n    page.get_by_role("button", name="Continue").click()\n\n    # Step 2: Get Magic code static in this case\n    magic_code = "123456"\n\n    # Step 3: Fill in the magic code\n    validate_code_input = page.locator('input[name="validateCode"]')\n    expect(validate_code_input).to_be_visible()\n    validate_code_input.fill(magic_code)\n    page.wait_for_timeout(1000)\n\n    return page\n\ndef test():\n    with sync_playwright() as p:\n        browser = p.chromium.launch(headless=True, slow_mo=1000, args=[\n            '--disable-web-security',\n            '--disable-features=IsolateOrigins,site-per-process',\n            '--proxy-server=http://localhost:8080',\n        ])\n        context = browser.new_context()\n\n        # Start recording the trace\n        context.tracing.start(screenshots=True, snapshots=True, sources=True)\n\n        try:\n            page = login(p, context)\n\n            # Step 2: Create a workspace in setting.\n            page.get_by_label("My settings").click()\n            page.get_by_test_id("InitialSettingsPage").get_by_label("Workspaces").click()\n            page.get_by_label("New workspace").last.click()\n            page.get_by_label("Back").last.click()\n\n            elements = page.locator("div").all_inner_texts()\n            new_workspace = []\n            # Search for the workspace name using a regular expression\n            for text in elements:\n                match = re.search(r"John's Workspace \\d+", text)\n                if match:\n                    workspace_name = match.group(0)\n                    new_workspace.append(workspace_name)\n\n            new_workspace = new_workspace[-1]\n            page.get_by_label("Inbox").click()\n\n            # Step 3 Go to workspace and create an expense with random merchant name.\n            merchant_name = '34234'\n            page.locator('button[aria-label="Navigates to a chat"]', has_text=new_workspace).last.click()\n            page.get_by_label("Create").last.click()\n            page.get_by_text("Submit expense", exact=True).click()\n            page.get_by_label("Manual").click()\n            select_currency_button = page.locator('button[aria-label="Select a currency"]').nth(-1)\n            page.wait_for_timeout(2000)\n\n            # Locate the div inside the button\n            div_inside_button = select_currency_button.locator('div').nth(-1)\n\n            # Get the text content of the div\n            default_currency = div_inside_button.text_content().strip()\n            page.get_by_placeholder("0").fill("500")\n            page.locator("#numPadContainerView").get_by_role("button", name="Next").click()\n            page.get_by_role("menuitem", name="Merchant Required").click()\n            page.get_by_role("textbox", name="Merchant").click()\n            page.get_by_role("textbox", name="Merchant").fill(merchant_name)\n            page.get_by_role("button", name="Save").click()\n            page.get_by_role("button", name=f"Submit {default_currency}").click()\n\n            # navigate to the search page\n            page.get_by_test_id("CustomBottomTabNavigator").get_by_label("Search").click()\n\n            # Select the first report\n            page.get_by_role("button", name=merchant_name).click()\n\n            page.wait_for_timeout(2000)\n\n            # Change the category\n            page.get_by_text("Category").last.click()\n            page.get_by_label("Advertising").click()\n\n            # Add a 2nd message\n            page.locator("#composer").last.fill("Heya 2")\n            page.locator("#composer").last.press("Enter")\n\n            # App should maintain the editor in the RHN\n            expect(page.get_by_text("John (you)")).not_to_be_visible()\n\n        except Exception as e:\n            # Re-raise the exception so the test framework picks up the failure\n            raise e\n\n        finally:\n            # Stop the trace and clean it\n            context.tracing.stop(path="/app/expensify/user_tool/output_browser1.zip")\n            trace_cleaner("/app/expensify/user_tool/output_browser1.zip")\n