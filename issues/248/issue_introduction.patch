diff --git a/src/pages/ReimbursementAccount/BankInfo/substeps/Manual.tsx b/src/pages/ReimbursementAccount/BankInfo/substeps/Manual.tsx
index 0d298f72796..d39f5e0ba09 100644
--- a/src/pages/ReimbursementAccount/BankInfo/substeps/Manual.tsx
+++ b/src/pages/ReimbursementAccount/BankInfo/substeps/Manual.tsx
@@ -33,7 +33,7 @@ function Manual({onNext}: ManualProps) {
         [BANK_INFO_STEP_KEYS.ACCOUNT_NUMBER]: reimbursementAccount?.achData?.[BANK_INFO_STEP_KEYS.ACCOUNT_NUMBER] ?? '',
     };
 
-    const hasBankAccountData = !!(reimbursementAccount?.achData?.bankAccountID ?? '');
+    const shouldBeReadOnlyInput = reimbursementAccount?.achData?.setupType === CONST.BANK_ACCOUNT.SETUP_TYPE.PLAID;
 
     const validate = useCallback(
         (values: FormOnyxValues<typeof ONYXKEYS.FORMS.REIMBURSEMENT_ACCOUNT_FORM>): FormInputErrors<typeof ONYXKEYS.FORMS.REIMBURSEMENT_ACCOUNT_FORM> => {
@@ -58,6 +58,8 @@ function Manual({onNext}: ManualProps) {
         [translate],
     );
 
+    const hasBankAccountData = !!(reimbursementAccount?.achData?.bankAccountID ?? '');
+
     const handleSubmit = useReimbursementAccountStepFormSubmit({
         fieldIds: STEP_FIELDS,
         onNext,
@@ -86,7 +88,7 @@ function Manual({onNext}: ManualProps) {
                 inputMode={CONST.INPUT_MODE.NUMERIC}
                 shouldSaveDraft
                 shouldUseDefaultValue={hasBankAccountData}
-                disabled={hasBankAccountData}
+                disabled={shouldBeReadOnlyInput}
             />
             <InputWrapper
                 InputComponent={TextInput}
@@ -99,7 +101,7 @@ function Manual({onNext}: ManualProps) {
                 inputMode={CONST.INPUT_MODE.NUMERIC}
                 shouldSaveDraft
                 shouldUseDefaultValue={hasBankAccountData}
-                disabled={hasBankAccountData}
+                disabled={shouldBeReadOnlyInput}
             />
         </FormProvider>
     );
